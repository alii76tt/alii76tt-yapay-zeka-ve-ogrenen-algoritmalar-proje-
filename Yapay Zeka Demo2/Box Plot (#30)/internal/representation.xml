<?xml version="1.0" encoding="UTF-8"?>
<config xmlns="http://www.knime.org/2008/09/XMLConfig" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://www.knime.org/2008/09/XMLConfig http://www.knime.org/XMLConfig_2008_09.xsd" key="viewRepresentation">
    <entry key="jsNamespace" type="xstring" value="knimeBoxplot"/>
    <config key="jsCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="/* global d3:false */%%00010window.knimeBoxplot = (function () {%%00010    var boxplot = {};%%00010    var _data = {};%%00010    var MIN_HEIGHT = 100;%%00010    var MIN_WIDTH = 100;%%00010    var maxY = 0;%%00010    var minY = 0;%%00010    var Y_TICK_COUNT = 5;%%00010    var Y_LABEL_MAX_WIDTH = 200;%%00010    var _representation, _value, layoutContainer,%%00010        drawControls, drawChart, updateTitle, updateSubtitle, processMissingValues, resize;%%00010%%00010    var MISSING_VALUES_ONLY = 'missingValuesOnly';%%00010    var IGNORED_MISSING_VALUES = 'ignoredMissingValues';%%00010    var NO_DATA_AVAILABLE = 'noDataAvailable';%%00010    var NO_DATA_COLUMN = 'noDataColumn';%%00010%%00010    boxplot.init = function (representation, value) {%%00010        // Store value and representation for later%%00010        _value = value;%%00010        _representation = representation;%%00010%%00010        // No numeric columns available?%%00010        if (_representation.options.columns.length === 0) {%%00010            alert('No numeric columns selected');%%00010            return;%%00010        }%%00010%%00010        // If no column to show is selected yet, we take the first from all candidates%%00010        if (!_value.options.numCol) {%%00010            _value.options.numCol = _representation.options.columns[0];%%00010        }%%00010%%00010        d3.select('html').style('width', '100%').style('height', '100%');%%00010        d3.select('body').style('width', '100%').style('height', '100%');%%00010%%00010        var body = d3.select('body');%%00010%%00010        // Create container for our content%%00010        layoutContainer = body.append('div')%%00010            .attr('id', 'layoutContainer')%%00010            .attr('class', 'knime-layout-container')%%00010            .style('min-width', MIN_WIDTH + 'px')%%00010            .style('min-height', MIN_HEIGHT + 'px');%%00010%%00010        // Size layout container based on sizing settings%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            layoutContainer.style('width', '100%')%%00010                .style('height', '100%');%%00010        } else {%%00010            layoutContainer.style('width', _representation.options.svg.width + 'px')%%00010                .style('height', _representation.options.svg.height + 'px');%%00010        }%%00010%%00010        // Add SVG element%%00010        var svg1 = document.createElementNS('http://www.w3.org/2000/svg', 'svg');%%00010        layoutContainer[0][0].appendChild(svg1);%%00010%%00010        var d3svg = d3.select('svg')%%00010            .style('display', 'block');%%00010        // Add rectangle for background color%%00010        d3svg.append('rect')%%00010            .attr('id', 'bgr')%%00010            .attr('fill', _representation.options.backgroundColor);%%00010%%00010        // Append a group for the plot and add a rectangle for the data area background%%00010        d3svg.append('g')%%00010            .attr('id', 'plotG')%%00010            .append('rect')%%00010            .attr('id', 'da')%%00010            .attr('fill', _representation.options.daColor);%%00010%%00010        // Title%%00010        d3svg.append('text')%%00010            .attr('id', 'title')%%00010            .attr('class', 'knime-title')%%00010            .attr('x', 20)%%00010            .attr('y', 30)%%00010            .text(_value.options.title);%%00010%%00010        // Subtitle%%00010        d3svg.append('text')%%00010            .attr('id', 'subtitle')%%00010            .attr('class', 'knime-subtitle')%%00010            .attr('x', 20)%%00010            .text(_value.options.subtitle);%%00010        // y attr is set in drawChart%%00010%%00010        drawChart();%%00010        if (_representation.options.enableViewControls) {%%00010            drawControls();%%00010        }%%00010%%00010        if (window.parent.KnimePageLoader) {%%00010            window.parent.KnimePageLoader.autoResize(window.frameElement.id);%%00010        }%%00010    };%%00010%%00010    drawControls = function () {%%00010        if (_representation.options.displayFullscreen) {%%00010            knimeService.allowFullscreen();%%00010        }%%00010%%00010        if (!_representation.options.enableViewControls) {%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.enableTitleEdit || _representation.options.enableSubtitleEdit) {%%00010            if (_representation.options.enableTitleEdit) {%%00010                var chartTitleText = knimeService.createMenuTextField('chartTitleText', _value.options.title,%%00010                    updateTitle, true);%%00010                knimeService.addMenuItem('Chart Title:', 'header', chartTitleText);%%00010            }%%00010%%00010            if (_representation.options.enableSubtitleEdit) {%%00010                var chartSubtitleText = knimeService.createMenuTextField('chartSubtitleText', _value.options.subtitle,%%00010                    updateSubtitle, true);%%00010                knimeService.addMenuItem('Chart Subtitle:', 'header', chartSubtitleText, null, knimeService.SMALL_ICON);%%00010            }%%00010%%00010            if (!_representation.options.multi &amp;&amp; _representation.options.enableColumnSelection) {%%00010                knimeService.addMenuDivider();%%00010            }%%00010        }%%00010%%00010        if (!_representation.options.multi &amp;&amp; _representation.options.enableColumnSelection) {%%00010            var colSelect = knimeService.createMenuSelect('columnSelect', _value.options.numCol,%%00010                _representation.options.columns, function () {%%00010                    _value.options.numCol = this.value;%%00010                    drawChart();%%00010                });%%00010            knimeService.addMenuItem('Selected column:', 'long-arrow-up', colSelect);%%00010        }%%00010    };%%00010%%00010    updateTitle = function () {%%00010        var hadTitle = _value.options.title.length &gt; 0;%%00010        _value.options.title = document.getElementById('chartTitleText').value;%%00010        var hasTitle = _value.options.title.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the title appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#title').text(_value.options.title);%%00010    };%%00010%%00010    updateSubtitle = function () {%%00010        var hadTitle = _value.options.subtitle.length &gt; 0;%%00010        _value.options.subtitle = document.getElementById('chartSubtitleText').value;%%00010        var hasTitle = _value.options.subtitle.length &gt; 0;%%00010        if (hasTitle !== hadTitle) {%%00010            // if the subtitle appeared or disappeared, we need to resize the chart%%00010            drawChart(true);%%00010        }%%00010        d3.select('#subtitle').text(_value.options.subtitle);%%00010    };%%00010%%00010    // Draws the chart. If resizing is true, there are no animations.%%00010    drawChart = function (resizing) {%%00010%%00010        // Select the data to show%%00010        if (_representation.options.multi) {%%00010            _data = _representation.inObjects[0].stats;%%00010        } else {%%00010            _data = {};%%00010            var numCol = _value.options.numCol;%%00010            _data[numCol] = _representation.inObjects[0].stats[numCol];%%00010            if (typeof _data[numCol] === 'undefined') {%%00010                delete _data[numCol];%%00010            }%%00010        }%%00010%%00010        // Find the maximum y-value for the axis%%00010        maxY = Number.NEGATIVE_INFINITY;%%00010        minY = Number.POSITIVE_INFINITY;%%00010        for (var key in _data) {%%00010            maxY = Math.max(_data[key].max, maxY);%%00010            minY = Math.min(_data[key].min, minY);%%00010        }%%00010%%00010        // Calculate the correct chart width%%00010        var cw = Math.max(MIN_WIDTH, _representation.options.svg.width);%%00010        var ch = Math.max(MIN_HEIGHT, _representation.options.svg.height);%%00010%%00010        var chartWidth = cw + 'px';%%00010        var chartHeight = ch + 'px';%%00010        // If we are fullscreen, we set the chart width to 100%%%00010        if (_representation.options.svg.fullscreen &amp;&amp; _representation.runningInView) {%%00010            chartWidth = '100%';%%00010            chartHeight = '100%';%%00010        }%%00010%%00010        // The margins for the plot area%%00010        var topMargin = 10;%%00010        if (_value.options.title &amp;&amp; _value.options.subtitle) {%%00010            topMargin += 50;%%00010        } else if (_value.options.title) {%%00010            topMargin += 36;%%00010        } else if (_value.options.subtitle) {%%00010            topMargin += 26;%%00010        }%%00010%%00010        var margins = {%%00010            top: topMargin,%%00010            bottom: 40,%%00010            right: 10%%00010        };%%00010%%00010        d3.select('#subtitle').attr('y', topMargin - 14);%%00010%%00010        var d3svg = d3.select('svg')%%00010            .attr({ width: cw, height: ch })%%00010            .style({ width: chartWidth, height: chartHeight });%%00010%%00010        // Calculate height of the plot area (without x-axis)%%00010        var h = Math.max(50, parseInt(d3svg.style('height'), 10) - margins.top - margins.bottom);%%00010%%00010        // y-axis scale%%00010        var yScale = d3.scale.linear().domain([minY, maxY]).range([h, 0]).nice();%%00010%%00010        // determine required margin-left%%00010        var yLabels = yScale.ticks(Y_TICK_COUNT).map(yScale.tickFormat(Y_TICK_COUNT)).map(String);%%00010        var maxYLabelWidth = knimeService.measureAndTruncate(yLabels, {%%00010            container: d3svg.node(),%%00010            classes: 'knime-tick-label',%%00010            maxWidth: Y_LABEL_MAX_WIDTH%%00010        }).max.maxWidth;%%00010        margins.left = 15 + maxYLabelWidth;%%00010%%00010        // Calculate width of the plot area (without y-axis)%%00010        var w = Math.max(50, parseInt(d3svg.style('width'), 10) - margins.left - margins.right);%%00010%%00010        // x-axis scale%%00010        var xScale = d3.scale.ordinal().domain(d3.keys(_data)).rangeBands([0, w], 0.75, 0.5);%%00010%%00010        // Position the plot group based on the margins%%00010        var plotG = d3svg.select('#plotG')%%00010            .attr('transform', 'translate(' + margins.left + ',' + margins.top + ')');%%00010%%00010        // Resize background rectangles%%00010        plotG.select('#da').attr({%%00010            width: w,%%00010            height: h + 5%%00010        });%%00010        d3svg.select('#bgr').attr({%%00010            width: w + margins.left + margins.right,%%00010            height: h + margins.top + margins.bottom%%00010        });%%00010%%00010        // d3 axes%%00010        var xAxis = d3.svg.axis().scale(xScale)%%00010            .orient('bottom');%%00010        var yAxis = d3.svg.axis().scale(yScale)%%00010            .orient('left').ticks(Y_TICK_COUNT);%%00010        // Remove axes so they are redrawn%%00010        d3.selectAll('.axis').remove();%%00010%%00010        // Append and style x-axis%%00010        var d3XAxis = plotG.append('g')%%00010            .attr('class', 'x axis knime-x knime-axis')%%00010            .attr('transform', 'translate(0,' + (h + 5) + ')')%%00010            .call(xAxis);%%00010        d3XAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        // Append and style y-axis%%00010        var d3YAxis = plotG.append('g')%%00010            .attr('class', 'y axis knime-y knime-axis')%%00010            .call(yAxis);%%00010        d3YAxis.selectAll('line,path')%%00010            .attr('fill', 'none')%%00010            .attr('stroke', 'black')%%00010            .attr('shape-rendering', 'crispEdges');%%00010%%00010        d3.selectAll('.domain')%%00010            .classed('knime-axis-line', true);%%00010        var ticks = d3.selectAll('.tick')%%00010            .classed('knime-tick', true);%%00010        ticks.selectAll('line')%%00010            .classed('knime-tick-line', true);%%00010        ticks.selectAll('text')%%00010            .classed('knime-tick-label', true);%%00010%%00010        // Animate only when running in view and not resizing%%00010        var duration = _representation.runningInView &amp;&amp; !resizing ? 500 : 0;%%00010%%00010        // Create a selection for each box with data that we created at the beginning%%00010%%00010        var boxG = plotG.selectAll('g.box')%%00010            .data(d3.entries(_data).map(function (d) {%%00010                d.value.valid = d.value.upperQuartile &gt;= d.value.lowerQuartile;%%00010                return d;%%00010            }), function (d) {%%00010                return _representation.options.multi ? d.key : '__dummy__';%%00010            });%%00010%%00010        // Remove boxes that are not in the data anymore%%00010        boxG.exit().remove();%%00010%%00010        // Append a group element for each new box and shift it according to the class%%00010        var box = boxG.enter().append('g')%%00010            .attr('class', 'box')%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // Transition all boxes to their position%%00010        d3.selectAll('.box').transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + xScale(d.key) + ',0)'; });%%00010%%00010        // The main rectangle for the box%%00010        box.append('rect')%%00010            .attr('class', 'boxrect')%%00010            .attr('stroke', 'black')%%00010            .attr('fill', _representation.options.boxColor || 'none');%%00010%%00010        // Update the box according to the data%%00010        boxG.selectAll('.boxrect')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('height', function (d) { return yScale(d.value.lowerQuartile) - yScale(d.value.upperQuartile); })%%00010            .attr('width', xScale.rangeBand());%%00010%%00010        // The middle of the box on the x-axis%%00010        var middle = xScale.rangeBand() / 2;%%00010%%00010        // Text for the upper quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'uqText knime-label');%%00010        boxG.selectAll('.uqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.upperQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.upperQuartile * 100) / 100; });%%00010%%00010        // Text for the lower quartile%%00010        box.append('text')%%00010            .attr('x', -5)%%00010            .attr('text-anchor', 'end')%%00010            .attr('class', 'lqText knime-label');%%00010        boxG.selectAll('.lqText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('y', function (d) { return yScale(d.value.lowerQuartile) + 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerQuartile * 100) / 100; });%%00010%%00010%%00010        // Median%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('stroke-width', 3)%%00010            .attr('x1', '0')%%00010            .attr('class', 'median');%%00010%%00010        boxG.selectAll('.median')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.median); })%%00010            .attr('y2', function (d) { return yScale(d.value.median); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'medianText knime-label');%%00010%%00010        boxG.selectAll('.medianText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.median) + 3; })%%00010            .text(function (d) { return Math.round(d.value.median * 100) / 100; });%%00010%%00010        // Upper whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'uwL1');%%00010%%00010        boxG.selectAll('.uwL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.upperQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'uwL2');%%00010%%00010        boxG.selectAll('.uwL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.upperWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.upperWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'uwText knime-label');%%00010%%00010        boxG.selectAll('.uwText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.upperWhisker) + 10; })%%00010            .text(function (d) { return Math.round(d.value.upperWhisker * 100) / 100; });%%00010%%00010        // Lower whisker%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('class', 'ulL1');%%00010%%00010        boxG.selectAll('.ulL1')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x1', middle)%%00010            .attr('x2', middle)%%00010            .attr('stroke-dasharray', '5,5')%%00010            .attr('y1', function (d) { return yScale(d.value.lowerQuartile); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('line')%%00010            .attr('stroke', 'black')%%00010            .attr('x1', '0')%%00010            .attr('class', 'ulL2');%%00010%%00010        boxG.selectAll('.ulL2')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x2', xScale.rangeBand())%%00010            .attr('y1', function (d) { return yScale(d.value.lowerWhisker); })%%00010            .attr('y2', function (d) { return yScale(d.value.lowerWhisker); });%%00010%%00010        box.append('text')%%00010            .attr('class', 'ulText knime-label');%%00010%%00010        boxG.selectAll('.ulText')%%00010            .data(function (d) { return [d]; })%%00010            .transition().duration(duration)%%00010            .attr('opacity', function (d) { return d.value.valid ? 1 : 0; })%%00010            .attr('x', xScale.rangeBand() + 5)%%00010            .attr('y', function (d) { return yScale(d.value.lowerWhisker) - 3; })%%00010            .text(function (d) { return Math.round(d.value.lowerWhisker * 100) / 100; });%%00010%%00010        // Mild outliers%%00010        var outl = boxG.selectAll('circle.mo')%%00010            .data(function (d) { return d.value.mildOutliers; });%%00010%%00010        outl.enter().append('circle')%%00010            .attr('class', 'mo')%%00010            .attr('r', 5)%%00010            .attr('fill', _representation.options.daColor)%%00010            .attr('stroke', 'black')%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        outl.transition().duration(duration)%%00010            .attr('cx', middle)%%00010            .attr('cy', function (d) { return yScale(d.value); });%%00010%%00010        outl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        // Extreme outliers%%00010        var exoutl = boxG.selectAll('g.eo')%%00010            .data(function (d) { return d.value.extremeOutliers; });%%00010%%00010        var enterG = exoutl.enter().append('g')%%00010            .attr('class', 'eo')%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        var crossSize = 4;%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: -crossSize,%%00010                x2: crossSize,%%00010                y2: crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        enterG.append('line')%%00010            .attr({%%00010                x1: -crossSize,%%00010                y1: crossSize,%%00010                x2: crossSize,%%00010                y2: -crossSize,%%00010                'stroke-width': 1.5,%%00010                'stroke-linecap': 'round'%%00010            })%%00010            .append('title')%%00010            .attr('class', 'knime-label')%%00010            .text(function (d) { return d.rowKey; });%%00010%%00010        exoutl.transition().duration(duration)%%00010            .attr('transform', function (d) { return 'translate(' + middle + ',' + yScale(d.value) + ')'; });%%00010%%00010        // Fade out outliers%%00010        exoutl.exit().transition().style('opacity', 0).each('end', function () { d3.select(this).remove(); });%%00010%%00010        processMissingValues();%%00010%%00010        // Set resize handler%%00010        if (_representation.options.svg.fullscreen) {%%00010            var win = document.defaultView || document.parentWindow;%%00010            win.onresize = resize;%%00010        }%%00010    };%%00010%%00010    resize = function (event) {%%00010        drawChart(true);%%00010    };%%00010%%00010    processMissingValues = function () {%%00010        if (!_representation.options.showWarnings) {%%00010            return;%%00010        }%%00010%%00010        knimeService.clearWarningMessage(NO_DATA_AVAILABLE);%%00010        knimeService.clearWarningMessage(MISSING_VALUES_ONLY);%%00010        knimeService.clearWarningMessage(IGNORED_MISSING_VALUES);%%00010        knimeService.clearWarningMessage(NO_DATA_COLUMN);%%00010%%00010        var excludedDataCols = _representation.inObjects[0].excludedDataCols;%%00010        var numMissValPerCol = _representation.inObjects[0].numMissValPerCol;%%00010        var dataCols = _representation.options.columns;%%00010%%00010        // temporary workaround for being able to select a data column which was not included in the node settings%%00010        if (dataCols.indexOf(_value.options.numCol) === -1) {%%00010            knimeService.setWarningMessage('No chart was generated since the selected column was not included in the ' +%%00010                'node configuration dialog.\nPlease choose another column or add the selected column to the list of ' +%%00010                'included columns.', NO_DATA_COLUMN);%%00010            return;%%00010        }%%00010%%00010        if (_representation.options.multi) {%%00010            // plot multiple boxes%%00010            if (excludedDataCols.length === dataCols.length) {%%00010                knimeService.setWarningMessage('No chart was generated since all data columns have only missing ' +%%00010                    'values or special doubles.\nRe-run the workflow with different data.', NO_DATA_AVAILABLE);%%00010            } else {%%00010                if (!_representation.options.reportOnMissingValues) {%%00010                    return;%%00010                }%%00010                if (excludedDataCols.length &gt; 0) {%%00010                    knimeService.setWarningMessage('Following data columns contain only missing values or special ' +%%00010                        'doubles and were excluded from the view:\n    ' + excludedDataCols.join('\n    '),%%00010                        MISSING_VALUES_ONLY);%%00010                }%%00010                if (Object.keys(numMissValPerCol).length &gt; 0) {%%00010                    var str = '';%%00010                    for (var key in numMissValPerCol) {%%00010                        if (numMissValPerCol.hasOwnProperty(key)) {%%00010                            str += '    ' + key + ' - ' + numMissValPerCol[key] +%%00010                            ' missing value(s) or special double(s)\n';%%00010                        }%%00010                    }%%00010                    knimeService.setWarningMessage('Missing values or special doubles ignored during statistics ' +%%00010                        'calculations per data column:\n' + str, IGNORED_MISSING_VALUES);%%00010                }%%00010            }%%00010        } else {%%00010            // plot a box for only one data column%%00010            if (excludedDataCols.indexOf(_value.options.numCol) !== -1) {%%00010                knimeService.setWarningMessage('No chart was generated since the selected data column has only ' +%%00010                    'missing values or special doubles.\nChoose another data column or re-run the workflow with ' +%%00010                    'different data.', NO_DATA_AVAILABLE);%%00010            } else if (typeof numMissValPerCol[_value.options.numCol] !== 'undefined' &amp;&amp;%%00010                _representation.options.reportOnMissingValues) {%%00010                knimeService.setWarningMessage('Missing values or special doubles ignored during statistics ' +%%00010                    'calculations:\n' + numMissValPerCol[_value.options.numCol] + ' missing value(s) or special ' +%%00010                    'double(s).', IGNORED_MISSING_VALUES);%%00010            }%%00010        }%%00010    };%%00010%%00010    boxplot.getSVG = function () {%%00010        var svgElement = d3.select('svg')[0][0];%%00010        knimeService.inlineSvgStyles(svgElement);%%00010        // Return the SVG as a string.%%00010        return (new XMLSerializer()).serializeToString(svgElement);%%00010    };%%00010%%00010    boxplot.validate = function () {%%00010        return true;%%00010    };%%00010%%00010    boxplot.getComponentValue = function () {%%00010        return _value;%%00010    };%%00010%%00010    return boxplot;%%00010%%00010})();%%00010"/>
    </config>
    <config key="cssCode">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value=".axis path,%%00010line {%%00010    fill: none;%%00010    stroke: #000;%%00010    shape-rendering: crispEdges;%%00010}%%00010%%00010#controlContainer {%%00010%%00009position : relative; %%00010    bottom : 0px;%%00010    width : 100%; %%00010    padding : 5px; %%00010    padding-left : 60px;%%00010    border-top : 1px solid black; %%00010    background-color : white;%%00010    box-sizing: border-box;%%00010}"/>
    </config>
    <config key="jsDependencies">
        <entry key="numSettings" type="xint" value="2"/>
        <config key="dependency_0">
            <entry key="name" type="xstring" value="D3"/>
            <entry key="path" type="xstring" value="js-lib/d3/d3.v3_2_8.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
        <config key="dependency_1">
            <entry key="name" type="xstring" value="jQuery"/>
            <entry key="path" type="xstring" value="js-lib/jQuery/jquery-1.11.0.min.js"/>
            <entry key="usesDefine" type="xboolean" value="false"/>
            <entry key="exports" type="xstring" isnull="true" value=""/>
            <config key="dependencies">
                <entry key="array-size" type="xint" value="0"/>
            </config>
            <entry key="local" type="xboolean" value="true"/>
        </config>
    </config>
    <config key="cssDependencies">
        <entry key="array-size" type="xint" value="0"/>
    </config>
    <entry key="new" type="xboolean" value="false"/>
    <entry key="inView" type="xboolean" value="true"/>
    <config key="tableIds">
        <entry key="array-size" type="xint" value="1"/>
        <entry key="0" type="xstring" value="f6ca58c7-f50d-4189-ac76-9b1b7a19141a"/>
    </config>
    <config key="variables">
        <entry key="numSettings" type="xint" value="1"/>
        <entry key="mapClass" type="xstring" value="string"/>
        <entry key="key_0" type="xstring" value="knime.workspace"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="/home/ali/knime-workspace"/>
    </config>
    <config key="binaryFiles">
        <entry key="numSettings" type="xint" value="0"/>
        <entry key="mapClass" type="xstring" value="string"/>
    </config>
    <config key="options">
        <entry key="numSettings" type="xint" value="13"/>
        <entry key="mapClass" type="xstring" value="object"/>
        <entry key="key_0" type="xstring" value="backgroundColor"/>
        <entry key="class_0" type="xstring" value="java.lang.String"/>
        <entry key="value_0" type="xstring" value="#FFFFFF"/>
        <entry key="key_1" type="xstring" value="svg"/>
        <entry key="class_1" type="xstring" value="org.knime.dynamic.js.SettingsModelSVGOptions$JSONSVGOptions"/>
        <config key="value_1">
            <entry key="width" type="xint" value="800"/>
            <entry key="height" type="xint" value="600"/>
            <entry key="fullscreen" type="xboolean" value="true"/>
        </config>
        <entry key="key_2" type="xstring" value="columns"/>
        <entry key="class_2" type="xstring" value="[Ljava.lang.String;"/>
        <config key="value_2">
            <entry key="array-size" type="xint" value="5"/>
            <entry key="0" type="xstring" value="AT"/>
            <entry key="1" type="xstring" value="V"/>
            <entry key="2" type="xstring" value="AP"/>
            <entry key="3" type="xstring" value="RH"/>
            <entry key="4" type="xstring" value="PE"/>
        </config>
        <entry key="key_3" type="xstring" value="boxColor"/>
        <entry key="class_3" type="xstring" value="java.lang.String"/>
        <entry key="value_3" type="xstring" value="#FFFFFF"/>
        <entry key="key_4" type="xstring" value="enableTitleEdit"/>
        <entry key="class_4" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_4" type="xboolean" value="true"/>
        <entry key="key_5" type="xstring" value="displayFullscreen"/>
        <entry key="class_5" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_5" type="xboolean" value="true"/>
        <entry key="key_6" type="xstring" value="multi"/>
        <entry key="class_6" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_6" type="xboolean" value="true"/>
        <entry key="key_7" type="xstring" value="reportOnMissingValues"/>
        <entry key="class_7" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_7" type="xboolean" value="true"/>
        <entry key="key_8" type="xstring" value="enableViewControls"/>
        <entry key="class_8" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_8" type="xboolean" value="true"/>
        <entry key="key_9" type="xstring" value="enableColumnSelection"/>
        <entry key="class_9" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_9" type="xboolean" value="true"/>
        <entry key="key_10" type="xstring" value="showWarnings"/>
        <entry key="class_10" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_10" type="xboolean" value="true"/>
        <entry key="key_11" type="xstring" value="enableSubtitleEdit"/>
        <entry key="class_11" type="xstring" value="java.lang.Boolean"/>
        <entry key="value_11" type="xboolean" value="true"/>
        <entry key="key_12" type="xstring" value="daColor"/>
        <entry key="class_12" type="xstring" value="java.lang.String"/>
        <entry key="value_12" type="xstring" value="#FFFFFF"/>
    </config>
    <config key="inObjects">
        <entry key="numSettings" type="xint" value="1"/>
        <config key="inObject_0">
            <entry key="className" type="xstring" value="org.knime.dynamic.js.base.boxplot.BoxplotProcessor_v2$BoxPlotResult"/>
            <entry key="jsonValue" type="xstring" value="{&quot;m_stats&quot;:{&quot;AT&quot;:{&quot;lowerWhisker&quot;:1.81,&quot;lowerQuartile&quot;:13.51,&quot;median&quot;:20.345,&quot;upperQuartile&quot;:25.72,&quot;upperWhisker&quot;:37.11,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:1.81,&quot;max&quot;:37.11},&quot;V&quot;:{&quot;lowerWhisker&quot;:25.36,&quot;lowerQuartile&quot;:41.74,&quot;median&quot;:52.08,&quot;upperQuartile&quot;:66.54,&quot;upperWhisker&quot;:81.56,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:25.36,&quot;max&quot;:81.56},&quot;AP&quot;:{&quot;lowerWhisker&quot;:996.87,&quot;lowerQuartile&quot;:1009.1,&quot;median&quot;:1012.94,&quot;upperQuartile&quot;:1017.26,&quot;upperWhisker&quot;:1029.41,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row6925&quot;,&quot;value&quot;:1029.61},{&quot;rowKey&quot;:&quot;Row7485&quot;,&quot;value&quot;:1031.27},{&quot;rowKey&quot;:&quot;Row8462&quot;,&quot;value&quot;:1031.21},{&quot;rowKey&quot;:&quot;Row5067&quot;,&quot;value&quot;:1030.2},{&quot;rowKey&quot;:&quot;Row2395&quot;,&quot;value&quot;:1031.01},{&quot;rowKey&quot;:&quot;Row7892&quot;,&quot;value&quot;:1033.29},{&quot;rowKey&quot;:&quot;Row7623&quot;,&quot;value&quot;:1030.38},{&quot;rowKey&quot;:&quot;Row8270&quot;,&quot;value&quot;:1031.75},{&quot;rowKey&quot;:&quot;Row4928&quot;,&quot;value&quot;:1030.0},{&quot;rowKey&quot;:&quot;Row9366&quot;,&quot;value&quot;:1030.61},{&quot;rowKey&quot;:&quot;Row1583&quot;,&quot;value&quot;:1030.3},{&quot;rowKey&quot;:&quot;Row4125&quot;,&quot;value&quot;:1033.14},{&quot;rowKey&quot;:&quot;Row2761&quot;,&quot;value&quot;:1031.33},{&quot;rowKey&quot;:&quot;Row5431&quot;,&quot;value&quot;:1032.72},{&quot;rowKey&quot;:&quot;Row6006&quot;,&quot;value&quot;:1032.16},{&quot;rowKey&quot;:&quot;Row571&quot;,&quot;value&quot;:1029.65},{&quot;rowKey&quot;:&quot;Row6829&quot;,&quot;value&quot;:1030.1},{&quot;rowKey&quot;:&quot;Row238&quot;,&quot;value&quot;:1030.46},{&quot;rowKey&quot;:&quot;Row3955&quot;,&quot;value&quot;:1032.08},{&quot;rowKey&quot;:&quot;Row7320&quot;,&quot;value&quot;:1031.2},{&quot;rowKey&quot;:&quot;Row2298&quot;,&quot;value&quot;:1031.96},{&quot;rowKey&quot;:&quot;Row8098&quot;,&quot;value&quot;:1031.58},{&quot;rowKey&quot;:&quot;Row9068&quot;,&quot;value&quot;:992.89},{&quot;rowKey&quot;:&quot;Row6346&quot;,&quot;value&quot;:1031.16},{&quot;rowKey&quot;:&quot;Row5928&quot;,&quot;value&quot;:1032.83},{&quot;rowKey&quot;:&quot;Row5840&quot;,&quot;value&quot;:1031.14},{&quot;rowKey&quot;:&quot;Row4202&quot;,&quot;value&quot;:1029.54},{&quot;rowKey&quot;:&quot;Row2372&quot;,&quot;value&quot;:996.35},{&quot;rowKey&quot;:&quot;Row4327&quot;,&quot;value&quot;:1032.88},{&quot;rowKey&quot;:&quot;Row3766&quot;,&quot;value&quot;:1029.99},{&quot;rowKey&quot;:&quot;Row3021&quot;,&quot;value&quot;:1031.96},{&quot;rowKey&quot;:&quot;Row8411&quot;,&quot;value&quot;:1029.7},{&quot;rowKey&quot;:&quot;Row9159&quot;,&quot;value&quot;:1031.71},{&quot;rowKey&quot;:&quot;Row1250&quot;,&quot;value&quot;:1031.55},{&quot;rowKey&quot;:&quot;Row5956&quot;,&quot;value&quot;:1032.37},{&quot;rowKey&quot;:&quot;Row3213&quot;,&quot;value&quot;:1032.86},{&quot;rowKey&quot;:&quot;Row4067&quot;,&quot;value&quot;:993.31},{&quot;rowKey&quot;:&quot;Row2972&quot;,&quot;value&quot;:996.03},{&quot;rowKey&quot;:&quot;Row631&quot;,&quot;value&quot;:1029.8},{&quot;rowKey&quot;:&quot;Row8379&quot;,&quot;value&quot;:1029.54},{&quot;rowKey&quot;:&quot;Row6789&quot;,&quot;value&quot;:994.6},{&quot;rowKey&quot;:&quot;Row715&quot;,&quot;value&quot;:1033.3},{&quot;rowKey&quot;:&quot;Row4697&quot;,&quot;value&quot;:1029.7},{&quot;rowKey&quot;:&quot;Row983&quot;,&quot;value&quot;:995.88},{&quot;rowKey&quot;:&quot;Row9342&quot;,&quot;value&quot;:1031.32},{&quot;rowKey&quot;:&quot;Row7077&quot;,&quot;value&quot;:993.74},{&quot;rowKey&quot;:&quot;Row3066&quot;,&quot;value&quot;:1030.42},{&quot;rowKey&quot;:&quot;Row3015&quot;,&quot;value&quot;:1033.19},{&quot;rowKey&quot;:&quot;Row1091&quot;,&quot;value&quot;:995.24},{&quot;rowKey&quot;:&quot;Row4793&quot;,&quot;value&quot;:1030.81},{&quot;rowKey&quot;:&quot;Row2977&quot;,&quot;value&quot;:1030.86},{&quot;rowKey&quot;:&quot;Row8568&quot;,&quot;value&quot;:1031.34},{&quot;rowKey&quot;:&quot;Row8104&quot;,&quot;value&quot;:1031.08},{&quot;rowKey&quot;:&quot;Row2579&quot;,&quot;value&quot;:1032.93},{&quot;rowKey&quot;:&quot;Row5706&quot;,&quot;value&quot;:1029.91},{&quot;rowKey&quot;:&quot;Row2481&quot;,&quot;value&quot;:1032.98},{&quot;rowKey&quot;:&quot;Row2989&quot;,&quot;value&quot;:1030.72},{&quot;rowKey&quot;:&quot;Row1290&quot;,&quot;value&quot;:996.32},{&quot;rowKey&quot;:&quot;Row7807&quot;,&quot;value&quot;:1031.97},{&quot;rowKey&quot;:&quot;Row8133&quot;,&quot;value&quot;:993.11},{&quot;rowKey&quot;:&quot;Row3443&quot;,&quot;value&quot;:1029.63},{&quot;rowKey&quot;:&quot;Row847&quot;,&quot;value&quot;:994.17},{&quot;rowKey&quot;:&quot;Row3412&quot;,&quot;value&quot;:1032.77},{&quot;rowKey&quot;:&quot;Row5805&quot;,&quot;value&quot;:995.02},{&quot;rowKey&quot;:&quot;Row6708&quot;,&quot;value&quot;:1029.9},{&quot;rowKey&quot;:&quot;Row368&quot;,&quot;value&quot;:1030.18},{&quot;rowKey&quot;:&quot;Row9060&quot;,&quot;value&quot;:1030.68},{&quot;rowKey&quot;:&quot;Row6581&quot;,&quot;value&quot;:1030.72},{&quot;rowKey&quot;:&quot;Row3796&quot;,&quot;value&quot;:1031.8},{&quot;rowKey&quot;:&quot;Row3483&quot;,&quot;value&quot;:1033.09},{&quot;rowKey&quot;:&quot;Row2003&quot;,&quot;value&quot;:996.55},{&quot;rowKey&quot;:&quot;Row5690&quot;,&quot;value&quot;:1032.14},{&quot;rowKey&quot;:&quot;Row1388&quot;,&quot;value&quot;:1029.6},{&quot;rowKey&quot;:&quot;Row2060&quot;,&quot;value&quot;:1030.83},{&quot;rowKey&quot;:&quot;Row5529&quot;,&quot;value&quot;:1031.45},{&quot;rowKey&quot;:&quot;Row2447&quot;,&quot;value&quot;:1030.77},{&quot;rowKey&quot;:&quot;Row9267&quot;,&quot;value&quot;:1031.21},{&quot;rowKey&quot;:&quot;Row753&quot;,&quot;value&quot;:1032.67},{&quot;rowKey&quot;:&quot;Row7186&quot;,&quot;value&quot;:1031.39},{&quot;rowKey&quot;:&quot;Row5863&quot;,&quot;value&quot;:993.82},{&quot;rowKey&quot;:&quot;Row5006&quot;,&quot;value&quot;:995.45},{&quot;rowKey&quot;:&quot;Row319&quot;,&quot;value&quot;:1033.25},{&quot;rowKey&quot;:&quot;Row810&quot;,&quot;value&quot;:1033.08},{&quot;rowKey&quot;:&quot;Row536&quot;,&quot;value&quot;:1031.1},{&quot;rowKey&quot;:&quot;Row3492&quot;,&quot;value&quot;:1030.82},{&quot;rowKey&quot;:&quot;Row1808&quot;,&quot;value&quot;:1030.94},{&quot;rowKey&quot;:&quot;Row1660&quot;,&quot;value&quot;:1031.5},{&quot;rowKey&quot;:&quot;Row669&quot;,&quot;value&quot;:1033.04}],&quot;extremeOutliers&quot;:[],&quot;min&quot;:992.89,&quot;max&quot;:1033.3},&quot;RH&quot;:{&quot;lowerWhisker&quot;:31.15,&quot;lowerQuartile&quot;:63.325,&quot;median&quot;:74.975,&quot;upperQuartile&quot;:84.83,&quot;upperWhisker&quot;:100.16,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row8061&quot;,&quot;value&quot;:25.56},{&quot;rowKey&quot;:&quot;Row9075&quot;,&quot;value&quot;:30.99},{&quot;rowKey&quot;:&quot;Row789&quot;,&quot;value&quot;:25.89},{&quot;rowKey&quot;:&quot;Row7983&quot;,&quot;value&quot;:30.59},{&quot;rowKey&quot;:&quot;Row3603&quot;,&quot;value&quot;:29.43},{&quot;rowKey&quot;:&quot;Row9074&quot;,&quot;value&quot;:30.34},{&quot;rowKey&quot;:&quot;Row4367&quot;,&quot;value&quot;:26.67},{&quot;rowKey&quot;:&quot;Row2262&quot;,&quot;value&quot;:28.16},{&quot;rowKey&quot;:&quot;Row8737&quot;,&quot;value&quot;:30.83},{&quot;rowKey&quot;:&quot;Row9015&quot;,&quot;value&quot;:26.3},{&quot;rowKey&quot;:&quot;Row8751&quot;,&quot;value&quot;:28.81},{&quot;rowKey&quot;:&quot;Row6472&quot;,&quot;value&quot;:29.86}],&quot;extremeOutliers&quot;:[],&quot;min&quot;:25.56,&quot;max&quot;:100.16},&quot;PE&quot;:{&quot;lowerWhisker&quot;:420.26,&quot;lowerQuartile&quot;:439.75,&quot;median&quot;:451.54999999999995,&quot;upperQuartile&quot;:468.43,&quot;upperWhisker&quot;:495.76,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:420.26,&quot;max&quot;:495.76}},&quot;m_excludedDataCols&quot;:[],&quot;m_numMissValPerCol&quot;:{},&quot;stats&quot;:{&quot;AT&quot;:{&quot;lowerWhisker&quot;:1.81,&quot;lowerQuartile&quot;:13.51,&quot;median&quot;:20.345,&quot;upperQuartile&quot;:25.72,&quot;upperWhisker&quot;:37.11,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:1.81,&quot;max&quot;:37.11},&quot;V&quot;:{&quot;lowerWhisker&quot;:25.36,&quot;lowerQuartile&quot;:41.74,&quot;median&quot;:52.08,&quot;upperQuartile&quot;:66.54,&quot;upperWhisker&quot;:81.56,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:25.36,&quot;max&quot;:81.56},&quot;AP&quot;:{&quot;lowerWhisker&quot;:996.87,&quot;lowerQuartile&quot;:1009.1,&quot;median&quot;:1012.94,&quot;upperQuartile&quot;:1017.26,&quot;upperWhisker&quot;:1029.41,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row6925&quot;,&quot;value&quot;:1029.61},{&quot;rowKey&quot;:&quot;Row7485&quot;,&quot;value&quot;:1031.27},{&quot;rowKey&quot;:&quot;Row8462&quot;,&quot;value&quot;:1031.21},{&quot;rowKey&quot;:&quot;Row5067&quot;,&quot;value&quot;:1030.2},{&quot;rowKey&quot;:&quot;Row2395&quot;,&quot;value&quot;:1031.01},{&quot;rowKey&quot;:&quot;Row7892&quot;,&quot;value&quot;:1033.29},{&quot;rowKey&quot;:&quot;Row7623&quot;,&quot;value&quot;:1030.38},{&quot;rowKey&quot;:&quot;Row8270&quot;,&quot;value&quot;:1031.75},{&quot;rowKey&quot;:&quot;Row4928&quot;,&quot;value&quot;:1030.0},{&quot;rowKey&quot;:&quot;Row9366&quot;,&quot;value&quot;:1030.61},{&quot;rowKey&quot;:&quot;Row1583&quot;,&quot;value&quot;:1030.3},{&quot;rowKey&quot;:&quot;Row4125&quot;,&quot;value&quot;:1033.14},{&quot;rowKey&quot;:&quot;Row2761&quot;,&quot;value&quot;:1031.33},{&quot;rowKey&quot;:&quot;Row5431&quot;,&quot;value&quot;:1032.72},{&quot;rowKey&quot;:&quot;Row6006&quot;,&quot;value&quot;:1032.16},{&quot;rowKey&quot;:&quot;Row571&quot;,&quot;value&quot;:1029.65},{&quot;rowKey&quot;:&quot;Row6829&quot;,&quot;value&quot;:1030.1},{&quot;rowKey&quot;:&quot;Row238&quot;,&quot;value&quot;:1030.46},{&quot;rowKey&quot;:&quot;Row3955&quot;,&quot;value&quot;:1032.08},{&quot;rowKey&quot;:&quot;Row7320&quot;,&quot;value&quot;:1031.2},{&quot;rowKey&quot;:&quot;Row2298&quot;,&quot;value&quot;:1031.96},{&quot;rowKey&quot;:&quot;Row8098&quot;,&quot;value&quot;:1031.58},{&quot;rowKey&quot;:&quot;Row9068&quot;,&quot;value&quot;:992.89},{&quot;rowKey&quot;:&quot;Row6346&quot;,&quot;value&quot;:1031.16},{&quot;rowKey&quot;:&quot;Row5928&quot;,&quot;value&quot;:1032.83},{&quot;rowKey&quot;:&quot;Row5840&quot;,&quot;value&quot;:1031.14},{&quot;rowKey&quot;:&quot;Row4202&quot;,&quot;value&quot;:1029.54},{&quot;rowKey&quot;:&quot;Row2372&quot;,&quot;value&quot;:996.35},{&quot;rowKey&quot;:&quot;Row4327&quot;,&quot;value&quot;:1032.88},{&quot;rowKey&quot;:&quot;Row3766&quot;,&quot;value&quot;:1029.99},{&quot;rowKey&quot;:&quot;Row3021&quot;,&quot;value&quot;:1031.96},{&quot;rowKey&quot;:&quot;Row8411&quot;,&quot;value&quot;:1029.7},{&quot;rowKey&quot;:&quot;Row9159&quot;,&quot;value&quot;:1031.71},{&quot;rowKey&quot;:&quot;Row1250&quot;,&quot;value&quot;:1031.55},{&quot;rowKey&quot;:&quot;Row5956&quot;,&quot;value&quot;:1032.37},{&quot;rowKey&quot;:&quot;Row3213&quot;,&quot;value&quot;:1032.86},{&quot;rowKey&quot;:&quot;Row4067&quot;,&quot;value&quot;:993.31},{&quot;rowKey&quot;:&quot;Row2972&quot;,&quot;value&quot;:996.03},{&quot;rowKey&quot;:&quot;Row631&quot;,&quot;value&quot;:1029.8},{&quot;rowKey&quot;:&quot;Row8379&quot;,&quot;value&quot;:1029.54},{&quot;rowKey&quot;:&quot;Row6789&quot;,&quot;value&quot;:994.6},{&quot;rowKey&quot;:&quot;Row715&quot;,&quot;value&quot;:1033.3},{&quot;rowKey&quot;:&quot;Row4697&quot;,&quot;value&quot;:1029.7},{&quot;rowKey&quot;:&quot;Row983&quot;,&quot;value&quot;:995.88},{&quot;rowKey&quot;:&quot;Row9342&quot;,&quot;value&quot;:1031.32},{&quot;rowKey&quot;:&quot;Row7077&quot;,&quot;value&quot;:993.74},{&quot;rowKey&quot;:&quot;Row3066&quot;,&quot;value&quot;:1030.42},{&quot;rowKey&quot;:&quot;Row3015&quot;,&quot;value&quot;:1033.19},{&quot;rowKey&quot;:&quot;Row1091&quot;,&quot;value&quot;:995.24},{&quot;rowKey&quot;:&quot;Row4793&quot;,&quot;value&quot;:1030.81},{&quot;rowKey&quot;:&quot;Row2977&quot;,&quot;value&quot;:1030.86},{&quot;rowKey&quot;:&quot;Row8568&quot;,&quot;value&quot;:1031.34},{&quot;rowKey&quot;:&quot;Row8104&quot;,&quot;value&quot;:1031.08},{&quot;rowKey&quot;:&quot;Row2579&quot;,&quot;value&quot;:1032.93},{&quot;rowKey&quot;:&quot;Row5706&quot;,&quot;value&quot;:1029.91},{&quot;rowKey&quot;:&quot;Row2481&quot;,&quot;value&quot;:1032.98},{&quot;rowKey&quot;:&quot;Row2989&quot;,&quot;value&quot;:1030.72},{&quot;rowKey&quot;:&quot;Row1290&quot;,&quot;value&quot;:996.32},{&quot;rowKey&quot;:&quot;Row7807&quot;,&quot;value&quot;:1031.97},{&quot;rowKey&quot;:&quot;Row8133&quot;,&quot;value&quot;:993.11},{&quot;rowKey&quot;:&quot;Row3443&quot;,&quot;value&quot;:1029.63},{&quot;rowKey&quot;:&quot;Row847&quot;,&quot;value&quot;:994.17},{&quot;rowKey&quot;:&quot;Row3412&quot;,&quot;value&quot;:1032.77},{&quot;rowKey&quot;:&quot;Row5805&quot;,&quot;value&quot;:995.02},{&quot;rowKey&quot;:&quot;Row6708&quot;,&quot;value&quot;:1029.9},{&quot;rowKey&quot;:&quot;Row368&quot;,&quot;value&quot;:1030.18},{&quot;rowKey&quot;:&quot;Row9060&quot;,&quot;value&quot;:1030.68},{&quot;rowKey&quot;:&quot;Row6581&quot;,&quot;value&quot;:1030.72},{&quot;rowKey&quot;:&quot;Row3796&quot;,&quot;value&quot;:1031.8},{&quot;rowKey&quot;:&quot;Row3483&quot;,&quot;value&quot;:1033.09},{&quot;rowKey&quot;:&quot;Row2003&quot;,&quot;value&quot;:996.55},{&quot;rowKey&quot;:&quot;Row5690&quot;,&quot;value&quot;:1032.14},{&quot;rowKey&quot;:&quot;Row1388&quot;,&quot;value&quot;:1029.6},{&quot;rowKey&quot;:&quot;Row2060&quot;,&quot;value&quot;:1030.83},{&quot;rowKey&quot;:&quot;Row5529&quot;,&quot;value&quot;:1031.45},{&quot;rowKey&quot;:&quot;Row2447&quot;,&quot;value&quot;:1030.77},{&quot;rowKey&quot;:&quot;Row9267&quot;,&quot;value&quot;:1031.21},{&quot;rowKey&quot;:&quot;Row753&quot;,&quot;value&quot;:1032.67},{&quot;rowKey&quot;:&quot;Row7186&quot;,&quot;value&quot;:1031.39},{&quot;rowKey&quot;:&quot;Row5863&quot;,&quot;value&quot;:993.82},{&quot;rowKey&quot;:&quot;Row5006&quot;,&quot;value&quot;:995.45},{&quot;rowKey&quot;:&quot;Row319&quot;,&quot;value&quot;:1033.25},{&quot;rowKey&quot;:&quot;Row810&quot;,&quot;value&quot;:1033.08},{&quot;rowKey&quot;:&quot;Row536&quot;,&quot;value&quot;:1031.1},{&quot;rowKey&quot;:&quot;Row3492&quot;,&quot;value&quot;:1030.82},{&quot;rowKey&quot;:&quot;Row1808&quot;,&quot;value&quot;:1030.94},{&quot;rowKey&quot;:&quot;Row1660&quot;,&quot;value&quot;:1031.5},{&quot;rowKey&quot;:&quot;Row669&quot;,&quot;value&quot;:1033.04}],&quot;extremeOutliers&quot;:[],&quot;min&quot;:992.89,&quot;max&quot;:1033.3},&quot;RH&quot;:{&quot;lowerWhisker&quot;:31.15,&quot;lowerQuartile&quot;:63.325,&quot;median&quot;:74.975,&quot;upperQuartile&quot;:84.83,&quot;upperWhisker&quot;:100.16,&quot;mildOutliers&quot;:[{&quot;rowKey&quot;:&quot;Row8061&quot;,&quot;value&quot;:25.56},{&quot;rowKey&quot;:&quot;Row9075&quot;,&quot;value&quot;:30.99},{&quot;rowKey&quot;:&quot;Row789&quot;,&quot;value&quot;:25.89},{&quot;rowKey&quot;:&quot;Row7983&quot;,&quot;value&quot;:30.59},{&quot;rowKey&quot;:&quot;Row3603&quot;,&quot;value&quot;:29.43},{&quot;rowKey&quot;:&quot;Row9074&quot;,&quot;value&quot;:30.34},{&quot;rowKey&quot;:&quot;Row4367&quot;,&quot;value&quot;:26.67},{&quot;rowKey&quot;:&quot;Row2262&quot;,&quot;value&quot;:28.16},{&quot;rowKey&quot;:&quot;Row8737&quot;,&quot;value&quot;:30.83},{&quot;rowKey&quot;:&quot;Row9015&quot;,&quot;value&quot;:26.3},{&quot;rowKey&quot;:&quot;Row8751&quot;,&quot;value&quot;:28.81},{&quot;rowKey&quot;:&quot;Row6472&quot;,&quot;value&quot;:29.86}],&quot;extremeOutliers&quot;:[],&quot;min&quot;:25.56,&quot;max&quot;:100.16},&quot;PE&quot;:{&quot;lowerWhisker&quot;:420.26,&quot;lowerQuartile&quot;:439.75,&quot;median&quot;:451.54999999999995,&quot;upperQuartile&quot;:468.43,&quot;upperWhisker&quot;:495.76,&quot;mildOutliers&quot;:[],&quot;extremeOutliers&quot;:[],&quot;min&quot;:420.26,&quot;max&quot;:495.76}},&quot;excludedDataCols&quot;:[],&quot;numMissValPerCol&quot;:{}}"/>
        </config>
    </config>
    <entry key="warnMessage" type="xstring" value=""/>
    <entry key="errorMessage" type="xstring" value=""/>
</config>
